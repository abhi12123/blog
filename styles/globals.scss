html,
body {
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,
    Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
    padding: 0;
    margin: 0;
}

$primary-color : #d5d5d5;
$secondary-color: #0e0e0e;
$link-color : rgb(60 118 158);

* {
  box-sizing: border-box;
}

.link{
  color: $link-color;
}

.navbar{
  background-color: $secondary-color;
  .navbar-container{
    max-width: 1024px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: auto;
    padding: 0 10px;
  }
  .trending-topics{
    max-width: 1024px;
    margin: auto;
    display: flex;
    padding: 0 10px;
    gap: 15px;
    .topic{
      background-color: $primary-color;
      color: $secondary-color;
      padding: 1px 5px;
      border-radius: 3px;
      margin-bottom: 8px;
      &:hover{
        box-shadow:white 0px 0px 1px 1px;
      }
    }
  }
  a {
    color: white;
    text-decoration: none;
  }
  .logo-name {
    padding: 20px 10px 8px 10px;
    h3{
      margin: 0;
    }
  }
}

.topics-label{
  margin: 0;
  margin-bottom: 8px;
  color: $primary-color;
}

.nav-items{
  display: flex;
  justify-content: space-between;
  gap:20px;
  margin: 60px 0;
  a{ color: inherit; text-decoration: none;}
}

.nav-item{
  padding: 10px 20px;
  border-radius: 8px;
  background-color: $primary-color;
  &:hover{
    box-shadow: #b0b0b08c 1px 3px 9px 0px;
  }
}

.layout-body{
  display: flex;
  max-width: 1024px;
  margin: auto;
  padding: 0 10px;
  justify-content: space-between;
  min-height: calc(100vh - 160px);
  aside{
    width: 200px;
    max-width: 200px;
    width: 100%;
  }
  main {
    width: calc(100% - 230px);
  }
}

.next-post{
  text-align: right;
}

.landing-page-hero {
  h1{
    font-size: 40px;
    small {
      color: $primary-color;
    }
  }
  h2{
    margin: 0;
    text-align: right;
  }
} 

.title1{
  font-size: 40px;
}

@media only screen and (max-width: 600px) {
  .nav-items {
    flex-direction: column;
  }
  .trending-topics{
    flex-direction:column;
    gap: 0px !important;
    align-items: center;
    p{
      display: block;
    }
    a{
      display: none;
    }
  }
  .mobile-display-navbar a{
    display: block;
  }
}

@media only screen and (max-width: 900px) {
  .layout-body{
    flex-direction: column;
    main{
      width: 100%;
    }
    aside{
      max-width: 100%;
    }
  }
}

.wave {
  animation-name: wave-animation;  /* Refers to the name of your @keyframes element below */
  animation-duration: 2.5s;        /* Change to speed up or slow down */
  animation-iteration-count: infinite;  /* Never stop waving :) */
  transform-origin: 70% 70%;       /* Pivot around the bottom-left palm */
  display: inline-block;
}

@keyframes wave-animation {
    0% { transform: rotate( 0.0deg) }
   10% { transform: rotate(14.0deg) }  /* The following five values can be played with to make the waving more or less extreme */
   20% { transform: rotate(-8.0deg) }
   30% { transform: rotate(14.0deg) }
   40% { transform: rotate(-4.0deg) }
   50% { transform: rotate(10.0deg) }
   60% { transform: rotate( 0.0deg) }  /* Reset for the last half to pause */
  100% { transform: rotate( 0.0deg) }
}

.blog-list{
  padding: 0;
  display: flex;
  flex-direction: column;
  .blog-list-entry{
    list-style-type: none;
    border-top: 0.5px solid $secondary-color;
    padding: 20px 0px;
    color: inherit;
    text-decoration: none;
    small{
      color: $secondary-color;
    }
    a{
      color: inherit;
      text-decoration: none;
    }
  }
  h3{
    margin: 0;
    &:hover{
      color: $secondary-color;
    }
  }
}


$pixel: 8px;

$stroke: #191516;
$skin-1: #bd8968;
$skin-2: #855644;

$hair-1: #262221;
$hair-2: #0d0c0c;

$cloth-1: #bb3435;
$cloth-2: #5f1c36;

$pants-1: #242c2e;
$pants-2: #1b2124;

$ground: #b1b1b1;

@function p($x, $y, $color){
    @return ($x * $pixel) ($y * $pixel) $color;
}

body{
    background-color: #f7f7f7;
}

.pixel{
    position: absolute;
    left: 80px;
    top: 100px;
    width: $pixel;
    height: $pixel;
    background: $stroke;
    box-shadow: 
        /* eye right */
        p(0, 0, $stroke), p(0, 1, $stroke),
        /* eye left */
        p(5, 0, $stroke), p(5, 1, $stroke),

        /* hair */
        p(3, -6, $hair-1),
        p(-2, -5, $hair-2), p(-1, -5, $hair-2),
        p(0, -5, $hair-1),  p(1, -5, $hair-1),  p(2, -5, $hair-1), 
        p(3, -5, $hair-1),  p(4, -5, $hair-1),  p(4, -5, $hair-1),
        p(5, -5, $hair-1), 
        
        p(-3, -4, $hair-2),
        p(-2, -4, $hair-2), p(-1, -4, $hair-2), p(0, -4, $hair-1),
        p(1, -4, $hair-1),  p(2, -4, $hair-1),  p(3, -4, $hair-1),
        p(4, -4, $hair-1),  p(5, -4, $hair-1),  p(6, -4, $hair-1),

        p(-3, -3, $hair-2),
        p(-2, -3, $hair-2), p(-1, -3, $hair-2), p(0, -3, $hair-2),
        p(1, -3, $hair-1),  p(2, -3, $hair-1),  p(3, -3, $hair-1),
        p(4, -3, $hair-1),  p(5, -3, $hair-1),  p(6, -3, $hair-1),

        p(-3, -2, $hair-2), p(-2, -2, $hair-2),
        p(1, -2, $hair-2),  p(2, -2, $hair-2),
        p(3, -2, $hair-1),  p(4, -2, $hair-1),  p(4, -2, $hair-1), 
        p(5, -2, $hair-1),  p(6, -2, $hair-1),  p(7, -2, $hair-1), 

        p(-3, -1, $hair-2), p(-2, -1, $hair-2), p(-2, 0, $hair-2),


        /* face */
        p(-1, -2, $skin-2), p(0, -2, $skin-2),
        p(-1, -1, $skin-2), p(0, -1, $skin-2),  p(1, -1, $skin-2),
        p(2, -1, $skin-2),  p(3, -1, $skin-2),  p(4, -1, $skin-2), p(5, -1, $skin-2),
        p(-3, 0, $skin-1),  p(-1, 0, $skin-2),  
        p(1, 0, $skin-1),   p(2, 0, $skin-1),   p(3, 0, $skin-1),  p(4, 0, $skin-1),
        p(-3, 1, $skin-2),  p(-2, 1, $skin-2),  p(-1, 1, $skin-2),
        p(1, 1, $skin-1),   p(2, 1, $skin-1),   p(3, 1, $skin-1),  p(4, 1, $skin-1),
        p(-2, 2, $skin-2),  p(-1, 2, $skin-2),  p(0, 2, $skin-2),
        p(1, 2, $skin-1),   p(2, 2, $skin-1),   p(3, 2, $skin-1),  p(4, 2, $skin-1), p(5, 2, $skin-1),
        p(-1, 3, $skin-2),  p(0, 3, $skin-2),  p(1, 3, $skin-2),
        p(2, 3, $skin-1),   p(3, 3, $skin-1),  p(4, 3, $skin-1),

        /* face */

        /* stroke head */
        p(7, -7, $stroke),
        p(-4, -6, $stroke), p(-2, -6, $stroke), p(-1, -6, $stroke), p(0, -6, $stroke),
        p(1, -6, $stroke),  p(2, -6, $stroke),  p(3, -7, $stroke),  p(4, -6, $stroke),
        p(5, -6, $stroke),  p(6, -6, $stroke),  p(-3, -5, $stroke), p(6, -5, $stroke),
        p(-4, -4, $stroke), p(7, -4, $stroke),  p(-4, -3, $stroke), p(7, -3, $stroke),
        p(-4, -2, $stroke), p(8, -2, $stroke),  p(-4, -1, $stroke), p(6, -1, $stroke), p(7, -1, $stroke),
        p(-4, 0, $stroke),  p(6, 0, $stroke),   p(-4, 1, $stroke),  p(6, 1, $stroke),
        p(-3, 2, $stroke),  p(6, 2, $stroke),   p(-2, 3, $stroke),  p(5, 3, $stroke),
        p(-1, 4, $stroke),  p(0, 4, $stroke),   p(1, 4, $stroke),   p(2, 4, $stroke),
        p(3, 4, $stroke),   p(4, 4, $stroke),

        /* cloth */
        p(-2, 4, $cloth-2),
        p(-3, 5, $cloth-2), p(-2, 5, $cloth-2), p(-1, 5, $cloth-2), p(-1, 5, $cloth-2),
        p(0, 5, $cloth-2),  p(1, 5, $cloth-2),  p(2, 5, $cloth-2),  p(3, 5, $cloth-2),
        p(-1, 6, $cloth-2), p(0, 6, $cloth-2),  p(1, 6, $cloth-1),  p(2, 6, $cloth-1), p(3, 6, $cloth-1),

        /* hands */
        p(-3, 6, $skin-2), p(5, 6, $skin-1),

        /* pants */
        p(-1, 7, $pants-2), p(0, 7, $pants-2),  p(1, 7, $pants-1),  p(2, 7, $pants-1),  p(3, 7, $pants-1),
        p(-1, 8, $pants-2), p(3, 8, $pants-2),

        /* stroke body */
        p(-3, 4, $stroke),  p(-4, 5, $stroke),  p(4, 5, $stroke),   p(5, 5, $stroke),
        p(-4, 6, $stroke),  p(-2, 6, $stroke),  p(4, 6, $stroke),   p(6, 6, $stroke),
        p(-4, 7, $stroke),  p(-3, 7, $stroke),  p(-2, 7, $stroke),  p(4, 7, $stroke),
        p(5, 7, $stroke),   p(6, 7, $stroke),
        p(-2, 8, $stroke),  p(0, 8, $stroke),   p(2, 8, $stroke),   p(4, 8, $stroke),
        p(-2, 9, $stroke),  p(-1, 9, $stroke),  p(2, 9, $stroke),   p(3, 9, $stroke),

        /* ground */
        p(-6, 10, $ground), p(-5, 10, $ground), p(-4, 10, $ground), p(-3, 10, $ground),
        p(-2, 10, $ground), p(-1, 10, $ground), p(0, 10, $ground),  p(1, 10, $ground),
        p(2, 10, $ground),  p(3, 10, $ground),  p(4, 10, $ground),  p(5, 10, $ground),
        p(6, 10, $ground),  p(7, 10, $ground),  p(8, 10, $ground)
    ;
}

.about-section{
  position: relative;
  background-color: $primary-color;
  padding: 12px;
  border-radius: 0 0 5px 5px;
  margin-bottom: 50px;
  .details{
    padding-top: 200px;
  }
  a{
    text-decoration: none;
    color: $link-color;
  }
}

footer{
  text-align: center;
  background-color: $secondary-color;
  color: white;
  padding: 60px 0 30px 0;
}

.article-meta{
  list-style-type: none;
  padding: 0;
  a{
    color: inherit;
    text-decoration: none;
  }
}

.article{
  img, pre{
    max-width: 100%;
    overflow: scroll;
    code{
      background: none;
      color: inherit;
    }
  }
  pre{
    background-color: rgb(0, 60, 10);
    color: white;
    padding: 8px 12px;
    border-radius: 3px;
  }
  code{
    background: rgb(228, 227, 227);
    color: rgb(181, 66, 0);
    padding: 2px 4px;
    border-radius: 3px;
    overflow-wrap: break-word;
  }
}

.view-topics{
  text-decoration: none;
  color: $link-color;
  text-align: right;
}

.error404{
  text-align: center;
  margin-bottom: 50px;
  h1{
    font-size: 100px;
    width: fit-content;
    color: $primary-color;
    background-color: $secondary-color;
    padding: 8px 15px;
    border-radius: 15px;
    margin: 50px auto;
  }
  button{
    border: none;
    padding: 8px 12px;
    color: $secondary-color;
    background-color: $primary-color;
    border-radius: 5px;
    cursor: pointer;
  }
}